<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- 注解扫描包 -->
	<context:component-scan base-package="com.cn.leedane" />

	<!-- 开启注解 -->
	<mvc:annotation-driven />

	<!--
		配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd
	-->
	
	<!-- 对静态资源文件的访问  方案一 （二选一） -->  
    <mvc:default-servlet-handler/>  
    
	<mvc:resources mapping="/img/**" location="/img/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/html/**" location="/html/" />
	<mvc:resources mapping="/jsp/**" location="/jsp/" /> 
	<!-- 
		Spring MVC 4中使用拦截器，必须先在Spring.xml中配置使用拦截器，配置的方法有两种：
		一种是传统的bean方式配置，
		另外一种是使用 http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd 定义的<mvc:interceptors> 
	-->
	<!-- 第一种 -->
	 <bean id="handlerMapping" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="loginInterceptor"/>
            </list>
        </property>
    </bean>
	
    <bean id="loginInterceptor" class="com.cn.leedane.interceptor.LoginInterceptor">
    </bean> 
    
    <mvc:interceptors>  
        <ref bean="loginInterceptor" />  
    </mvc:interceptors>  
    
    <!-- 第二种(已经注销) -->

	<!-- 定义跳转的文件的前后缀 ，视图模式配置-->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
</beans>
