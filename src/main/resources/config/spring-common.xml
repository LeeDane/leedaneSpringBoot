<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- 1. 数据源 : DriverManagerDataSource -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<!-- <property name="url" value="jdbc:mysql://192.168.46.2:3306/leedanemvc" /> -->
		<property name="url" value="jdbc:mysql://192.168.12.144:3306/leedanemvc" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
	</bean>

	<!--
		2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源

		MyBatis定义数据源,同意加载配置
	-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:config/mybatis-config.xml" /> 
	</bean>

	<!-- 配置sqlSessionTemplate -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>
	<!--
		3. mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory

		basePackage:指定sql映射文件/接口所在的包（自动扫描）
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.cn.leedane.mapper"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>

	<!-- 定义 Autowired 自动注入 bean -->
   <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/> 
    <!-- 扫描有注解的文件  base-package 包路径 -->

    
    <!-- 配置jdbcTemplate -->
    <bean id="jdbcTemplate"
      class="org.springframework.jdbc.core.JdbcTemplate">
   		<constructor-arg ref="dataSource" />
   </bean>
   
   <!-- 对Ehcache的集成 -->
   
   <bean id="ehcacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
         <property name="configLocation">
             <value>classpath:ehcache.xml</value>
         </property>
         <!-- 由于hibernate也使用了Ehcache, 保证双方都使用同一个缓存管理器 -->
         <property name="shared" value="true"/>
	</bean>
	
	<!-- 由于myEhcache中用到cache，所以必须在cache前面定义，将自己交给spring容器管理，
		不然会报空指针的异常 -->
	<!-- <bean id="myEhcache" class="com.cn.leedane.Utils.MyEhcache">
		<property name="cache">  
             <ref bean="cache"/>  
         </property>  
	</bean> -->
	
	<bean id="springUtil" class="com.cn.leedane.utils.SpringUtil">
	</bean>
	
	<!-- 系统级别的缓存 -->
	<bean id="systemEhCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">  
         <property name="cacheManager">  
             <ref bean="ehcacheManager"/>  
         </property>  
         <property name="cacheName">  
             <value>systemEhCache</value>  
         </property>  
     </bean> 
     
     <!-- 临时的缓存 -->
     <bean id="temporaryEhCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">  
         <property name="cacheManager">  
             <ref bean="ehcacheManager"/>  
         </property>  
         <property name="cacheName">  
             <value>temporaryEhCache</value>  
         </property>  
     </bean> 
     
     <bean id="systemCache" class="com.cn.leedane.cache.SystemCache">
    	<property name="systemEhCache" ref="systemEhCache"></property>
    </bean>
    
    <bean id="temporaryCache" class="com.cn.leedane.cache.TemporaryCache">
    	<property name="temporaryEhCache" ref="temporaryEhCache"></property>
    </bean>
</beans>
